(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> day is out of range for month"
p3
sS'layer'
p4
S'/var/www/web2py/applications/tcc/controllers/control.py'
p5
sS'code'
p6
S'# coding=utf-8\nimport commands\nimport itertools\nimport os\nimport platform\nimport re\nimport socket\nimport struct\nfrom datetime import datetime\n\n\ndef login(): ######## Tela Login ########\n    return response.render("estrutura/login.html")\n\ndef teste():\n    return response.render("estrutura/teste.html")\n\ndef dash(): ######## Tela dashboard ########\n    ##qtde_os = qtde_so()\n    from subprocess import check_output\n    saida_ip_externo = commands.getoutput(\'sudo curl ifconfig.pro\')\n    ip_externo = saida_ip_externo.split("\\n")\n\n    ips = check_output([\'hostname\', \'--all-ip-addresses\'])\n\n    idScan = db(db.Scan).select()[-1].id\n    gatewayIp = db(db.Scan).select()[-1].gatewayIp\n\n    windows_disp = db((db.ScanDispositivo.nomeOs == "Windows") & (db.ScanDispositivo.idScan == idScan)).select().as_list()\n    count_windows = len(windows_disp)\n\n    linux_disp = db((db.ScanDispositivo.nomeOs == "Linux") & (db.ScanDispositivo.idScan == idScan)).select().as_list()\n    count_linux = len(linux_disp)\n\n    outros_disp = db((db.ScanDispositivo.nomeOs == "Outro") & (db.ScanDispositivo.idScan == idScan)).select().as_list()\n    count_outros = len(outros_disp)\n\n    dispositivos = db(db.ScanDispositivo.idScan == idScan).select().as_list()\n    portas = []\n\n    for disp in dispositivos:\n        porta = db(db.ScanDispositivoPorta.idScanDispositivo == disp[\'id\']).select().as_list()\n        disp[\'qtdPortas\'] = len(porta)\n        for por in porta:\n            portas.append(por)\n    \n    count_portas = len(portas)\n\n    return response.render("estrutura/dash.html", ip_externo=ip_externo, ips=ips, count_windows=count_windows,\n                           count_linux=count_linux, count_outros=count_outros, count_portas=count_portas, count_disp=len(dispositivos),\n                           windows_disp=windows_disp, linux_disp=linux_disp, outros_disp=outros_disp, disp=dispositivos, gatewayIp=gatewayIp)\n\ndef relatorio(): ######## Tela Relat\xc3\xb3rio ########\n    return response.render("estrutura/relatorio.html")\n\ndef buscaScans():\n    data = request.vars[\'data\']\n    ip = request.vars[\'ip\']\n    comando = \'\'\'SELECT \ts.dataInicioScan,\n        sd.ip,\n        sd.mac,\n        sd.nomeFabricante,\n        sd.nomeOs,\n        IFNULL((SELECT group_concat(porta, \', \') FROM ScanDispositivoPorta sp WHERE sp.idScanDispositivo = sd.id), \'\') AS portas\n    FROM Scan s\n    INNER JOIN ScanDispositivo sd\n        ON s.id = sd.idScan\n    \'\'\'\n\n    if ip:\n        comando += \'WHERE sd.ip =\\\'\' + str(ip) + \'\\\'\'\n\n    dispositivos = db.executesql(comando)\n\n    return response.render("estrutura/gridRelatorio.html", dispositivos=dispositivos)\n\ndef scan(): ######## Tela Scan onde \'starta\' os scans ########\n    return response.render(\'estrutura/scan.html\')\n\ndef hydra():\n    saida_hydra = commands.getoutput("sudo hydra -L ~/wordlist -P ~/wordlist http-get://192.168.1.230:80")\n    if \'successfully\' in saida_hydra:\n        retorno_hydra = True\n    else:\n        retorno_hydra = False\n\n    return retorno_hydra\n\ndef script_scan():\n    saida_script = commands.getoutput("sudo python /var/www/web2py/applications/tcc/scripts/NetworkScan/NetworkScan.py")\n    if \'True\' in saida_script:\n        retorno_script_scan = True\n    else:\n        retorno_script_scan = False\n\n    return retorno_script_scan\n\ndef settings(): ######## Tela de Configura\xc3\xa7\xc3\xb5es ########\n    ### Servi\xc3\xa7os - iniciar/parar/reiniciar ###\n    server = get_server()\n    saida_apache = commands.getoutput(\'sudo /etc/init.d/apache2 status\')\n    dict_apache = saida_apache.split("\\n")\n    retorno_apache = None\n    for line in dict_apache:\n        if \'running\' in line:\n            retorno_apache = \'Ativo\'\n            break\n        else:\n            retorno_apache = \'Inativo\'\n\n    saida_openvpn = commands.getoutput(\'sudo /etc/init.d/openvpn status\')\n    dict_openvpn = saida_openvpn.split("\\n")\n    retorno_openvpn = None\n    for line in dict_openvpn:\n        if \'inactive\' in line:\n            retorno_openvpn = \'Inativo\'\n            break\n        else:\n            retorno_openvpn = \'Ativo\'\n\n    saida_ssh = commands.getoutput(\'sudo /etc/init.d/ssh status\')\n    dict_ssh = saida_ssh.split("\\n")\n    retorno_ssh = None\n    for line in dict_ssh:\n        if \'inactive\' in line:\n            retorno_ssh = \'Inativo\'\n            break\n        else:\n            retorno_ssh = \'Ativo\'\n\n    ### Termina Servi\xc3\xa7os ###\n\n    ### Sistema Operacional ###\n    saida_os = commands.getoutput("lsb_release -a")\n    dict_os = saida_os.split("\\n")\n    dict_os1 = dict_os[1].split("\\t")\n    retorno_dict_os = dict_os1[1]\n\n    ### LOAD ###\n\n    saida_load = commands.getoutput("uptime")\n    dict_load = saida_load.split(":")\n    retorno_dict_load = dict_load[4]\n\n    return response.render(\'estrutura/settings.html\', retorno_apache=retorno_apache, dict_apache=dict_apache,\n                           dict_openvpn=dict_openvpn, retorno_openvpn=retorno_openvpn, retorno_ssh=retorno_ssh,\n                           dict_ssh=dict_ssh, server=server, retorno_dict_os=retorno_dict_os, retorno_dict_load=retorno_dict_load)\n\n############################\n\ndef iniciar_servico_apache():\n    try:\n        os.system(\'sudo /etc/init.d/apache2 start\')\n    except Exception as error:\n        return error\n\ndef parar_servico_apache():\n    try:\n        os.system(\'sudo /etc/init.d/apache2 stop\')\n    except Exception as error:\n        return error\n\n\ndef reiniciar_servico_apache():\n    try:\n        os.system(\'sudo /etc/init.d/apache2 restart\')\n    except Exception as error:\n        return error\n\n############################\n\ndef iniciar_servico_openvpn():\n    try:\n        os.system("sudo /etc/init.d/openvpn start")\n    except Exception as error:\n        return error\n\ndef parar_servico_openvpn():\n    try:\n        os.system("sudo /etc/init.d/openvpn stop")\n    except Exception as error:\n        return error\n\n\ndef reiniciar_servico_openvpn():\n    try:\n        os.system("sudo /etc/init.d/openvpn restart")\n    except Exception as error:\n        return error\n\n############################\n\ndef iniciar_servico_ssh():\n    try:\n        os.system("sudo /etc/init.d/ssh start")\n    except Exception as error:\n        return error\n\ndef parar_servico_ssh():\n    try:\n        os.system("sudo /etc/init.d/ssh stop")\n    except Exception as error:\n        return error\n\n\ndef reiniciar_servico_ssh():\n    try:\n        os.system("sudo /etc/init.d/ssh restart")\n    except Exception as error:\n        return error\n\n#######################################################################\n\ndef get_ip(): ### Fun\xc3\xa7\xc3\xa3o que retorna endere\xc3\xa7o ip das interfaces LAN/WLAN ###\n    global ip\n    f = os.popen(\'ifconfig\')\n    for iface in [\' \'.join(i) for i in iter(lambda: list(itertools.takewhile(lambda l: not l.isspace(),f)), [])]:\n        if re.findall(\'^(eth|wlan)[0-9]\',iface) and re.findall(\'RUNNING\',iface):\n            ip = re.findall(\'(?<=inet\\saddr:)[0-9\\.]+\',iface)\n            if ip:\n                return ip[0]\n    return ip\n\n\ndef gateway(): ### Retorna endere\xc3\xa7o IP do gateway ###\n    """Read the default gateway directly from /proc."""\n    with open("/proc/net/route") as fh:\n        for line in fh:\n            fields = line.strip().split()\n            if fields[1] != \'00000000\' or not int(fields[3], 16) & 2:\n                continue\n\n            return socket.inet_ntoa(struct.pack("<L", int(fields[2], 16)))\n\n\'\'\'Fun\xc3\xa7\xc3\xb5es Teste\nip_interno = commands.getoutput(\'sudo ifconfig eth1 | grep "inet\\ addr" | cut -d: -f2 | cut -d" " -f1\') \'\'\'\n\n\n#######################################################################\n\n\ndef qtde_host(): ######## Quantidade de host na rede, ir\xc3\xa1 retornar todos dispositivos que est\xc3\xa3o conectados ########\n    saida_host = commands.getoutput(\'sudo nmap -sP 192.168.100.0/24 | grep hosts\')\n    dict_host = saida_host.split(" ")\n\n    return dict_host[5]\n\n\n#def qtde_so(): ######## Retorna quantidade de Windows e Linux conectados \xc3\xa0 rede ########\n#    qtde_os = {}\n#    qtde_os[\'Windows\'] = commands.getoutput(\'sudo nmap --top-ports 1 -O -F -n -Pn -r 192.168.1.0/24 | grep "Running: "> /tmp/os; echo "$(cat /tmp/os | grep -i Windows | wc -l)"\')\n#    qtde_os[\'Linux\'] = commands.getoutput(\'sudo nmap --top-ports 1 -O -F -n -Pn -r 192.168.1.0/24 | grep "Running: "> /tmp/os; echo "$(cat /tmp/os | grep -i Linux | wc -l)"\')\n\n    #return str(qtde_os).replace(\'{\',\'\').replace(\'}\',\'\')\n\n\ndef get_server(): ######## Informa\xc3\xa7\xc3\xb5es de hardware/software da Raspberry ########\n    server = {}\n    #var = platform.platform()\n    #server[\'distribuicao\'] = var.split(\'-\')[6]\n    #server[\'versao\'] = var.split(\'-\')[7]\n    server[\'arch\'] = platform.processor()\n    server[\'host\'] = platform.uname()[1]\n    server[\'kernel\'] = platform.uname()[2]\n    server[\'pythonv\'] = platform.python_version()\n    server[\'memory\'] = int(commands.getoutput("cat /proc/meminfo | grep MemTotal").split(\':\')[1].split(\'k\')[0])/1000\n    disk = os.statvfs("/")\n    totalBytes = float(disk.f_bsize*disk.f_blocks)\n    server[\'disk\'] = "%.2f GBytes" % (totalBytes/1024/1024/1024)\n\n    #var = commands.getoutput("atop | grep cpu")\n    return server\n\n\n### Fun\xc3\xa7\xc3\xa3o para mostrar hora real time ###\ndef atualiza_hora():\n    from datetime import datetime\n    item = str(datetime.now().strftime(\'%H:%M:%S - %d/%m/%Y\'))\n\n    return item\n\nresponse._vars=response._caller(dash)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.ValueError object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.ValueError object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.ValueError object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.ValueError object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.ValueError object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.ValueError object>'
p23
sS'args'
p24
S"('day is out of range for month',)"
p25
sS'__reduce__'
p26
S'<built-in method __reduce__ of exceptions.ValueError object>'
p27
sS'__str__'
p28
S"<method-wrapper '__str__' of exceptions.ValueError object>"
p29
sS'__format__'
p30
S'<built-in method __format__ of exceptions.ValueError object>'
p31
sS'__getattribute__'
p32
S"<method-wrapper '__getattribute__' of exceptions.ValueError object>"
p33
sS'__class__'
p34
S"<type 'exceptions.ValueError'>"
p35
sS'__unicode__'
p36
S'<built-in method __unicode__ of exceptions.ValueError object>'
p37
sS'__delattr__'
p38
S"<method-wrapper '__delattr__' of exceptions.ValueError object>"
p39
sS'__subclasshook__'
p40
S'<built-in method __subclasshook__ of type object>'
p41
sS'__repr__'
p42
S"<method-wrapper '__repr__' of exceptions.ValueError object>"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.ValueError object>'
p47
sS'__doc__'
p48
S"'Inappropriate argument value (of correct type).'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.ValueError object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'day is out of range for month'
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S's\xceX\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">ajax</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">application</td><td style="vertical-align:top;">:</td><td><div>tcc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cid</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">controller</td><td style="vertical-align:top;">:</td><td><div>control</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_admin</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-a73eef8d-7684-4dca-872d-77569c111fdd<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_tcc</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-8a88b611-2506-452a-98c3-109aefb85631<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_welcome</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-9c6e6f39-2816-44e9-876e-a81c4643b71a<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">env</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_ENCODING</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_ACCEPT_LANGUAGE</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_CONNECTION</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_COOKIE</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-9c6e6f39-2816-44e9-876e-a81c4643b71a; session_id_tcc=127.0.0.1-8a88b611-2506-452a-98c3-109aefb85631; session_id_admin=127.0.0.1-a73eef8d-7684-4dca-872d-77569c111fdd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_HOST</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_REFERER</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/tcc/control/dash</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">HTTP_USER_AGENT</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">PATH_INFO</td><td style="vertical-align:top;">:</td><td><div>/tcc/control/dash</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">QUERY_STRING</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_ADDR</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REMOTE_PORT</td><td style="vertical-align:top;">:</td><td><div>41298</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">REQUEST_METHOD</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SCRIPT_NAME</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_NAME</td><td style="vertical-align:top;">:</td><td><div>kali</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PORT</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_PROTOCOL</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">SERVER_SOFTWARE</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/var/www/web2py/applications/welcome/&#x27;, &#x27;/var/www/web2py/applications/tcc/&#x27;, &#x27;/var/www/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/var/www/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7fada6c69d40: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;kali&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/var/www/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/var/www/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept</td><td style="vertical-align:top;">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_encoding</td><td style="vertical-align:top;">:</td><td><div>gzip, deflate</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_accept_language</td><td style="vertical-align:top;">:</td><td><div>en-US,en;q=0.5</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_connection</td><td style="vertical-align:top;">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_cookie</td><td style="vertical-align:top;">:</td><td><div>session_id_welcome=127.0.0.1-9c6e6f39-2816-44e9-876e-a81c4643b71a; session_id_tcc=127.0.0.1-8a88b611-2506-452a-98c3-109aefb85631; session_id_admin=127.0.0.1-a73eef8d-7684-4dca-872d-77569c111fdd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_host</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_referer</td><td style="vertical-align:top;">:</td><td><div>http://127.0.0.1:8000/tcc/control/dash</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">http_user_agent</td><td style="vertical-align:top;">:</td><td><div>Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>kali</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path_info</td><td style="vertical-align:top;">:</td><td><div>/tcc/control/dash</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">query_string</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_addr</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">remote_port</td><td style="vertical-align:top;">:</td><td><div>41298</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_method</td><td style="vertical-align:top;">:</td><td><div>GET</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">request_uri</td><td style="vertical-align:top;">:</td><td><div>/tcc/control/dash</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">script_name</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_name</td><td style="vertical-align:top;">:</td><td><div>kali</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_port</td><td style="vertical-align:top;">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_protocol</td><td style="vertical-align:top;">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">server_software</td><td style="vertical-align:top;">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_path</td><td style="vertical-align:top;">:</td><td><div>/var/www/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7fada8a081e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7fada6d088d8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7fad936e57d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi.version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_errors</td><td style="vertical-align:top;">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0x7fada8a081e0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_file_wrapper</td><td style="vertical-align:top;">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x7fada6d088d8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_input</td><td style="vertical-align:top;">:</td><td><div>&lt;socket._fileobject object at 0x7fad936e57d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multiprocess</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_multithread</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_run_once</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_url_scheme</td><td style="vertical-align:top;">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi_version</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">extension</td><td style="vertical-align:top;">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">folder</td><td style="vertical-align:top;">:</td><td><div>/var/www/web2py/applications/tcc/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">function</td><td style="vertical-align:top;">:</td><td><div>dash</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">global_settings</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">app_folders</td><td style="vertical-align:top;">:</td><td><div>set([&#x27;/var/www/web2py/applications/welcome/&#x27;, &#x27;/var/www/web2py/applications/tcc/&#x27;, &#x27;/var/www/web2py/applications/admin/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">applications_parent</td><td style="vertical-align:top;">:</td><td><div>/var/www/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_args</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cmd_options</td><td style="vertical-align:top;">:</td><td><div>&lt;Values at 0x7fada6c69d40: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;with_scheduler&#x27;: False, &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;with_coverage&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;kali&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;port&#x27;: 8000, &#x27;print_errors&#x27;: False, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/var/www/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;minthreads&#x27;: None, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;profiler_dir&#x27;: None, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;interfaces&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;gae&#x27;: None, &#x27;password&#x27;: &#x27;******&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;import_models&#x27;: False, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">db_sessions</td><td style="vertical-align:top;">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">debugging</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">gluon_parent</td><td style="vertical-align:top;">:</td><td><div>/var/www/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_jython</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_pypy</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_source</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">local_hosts</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>kali</div></td></tr><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">web2py_version</td><td style="vertical-align:top;">:</td><td><div>2.14.6-stable+timestamp.2016.05.10.00.21.47</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_https</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_local</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_restful</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_scheduler</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">is_shell</td><td style="vertical-align:top;">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">now</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 8, 31, 5, 28, 28, 108073)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_args</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">raw_extension</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">url</td><td style="vertical-align:top;">:</td><td><div>/tcc/control/dash</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">utcnow</td><td style="vertical-align:top;">:</td><td><div>datetime.datetime(2017, 8, 31, 9, 28, 28, 108099)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">wsgi</td><td style="vertical-align:top;">:</td><td><div>&lt;gluon.main.LazyWSGI object at 0x7fad98024250&gt;</div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'/var/www/web2py/gluon/restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0x7fad98014f30, file "/...applications/tcc/controllers/control.py", line 2>'
p69
ssS'lnum'
p70
I227
sS'lines'
p71
(dp72
I224
S'            ccode = code'
p73
sI225
S'        else:'
p74
sI226
S'            ccode = compile2(code, layer)'
p75
sI227
S'        exec ccode in environment'
p76
sI228
S'    except HTTP:'
p77
sI229
S'        raise'
p78
sI230
S'    except RestrictedError:'
p79
sI231
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p80
sI222
S'    try:'
p81
sI223
S'        if isinstance(code, types.CodeType):'
p82
ssS'call'
p83
S"(code='# coding=utf-8\\nimport commands\\nimport itertools\\n...turn item\\n\\nresponse._vars=response._caller(dash)\\n', environment={'A': <class 'gluon.html.A'>, 'ANY_OF': <class 'gluon.validators.ANY_OF'>, 'ASSIGNJS': <function ASSIGNJS>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, ...}, layer='/var/www/web2py/applications/tcc/controllers/control.py')"
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'/var/www/web2py/applications/tcc/controllers/control.py'
p88
sg64
(dp89
sg70
I282
sg71
(dp90
I271
S'    #var = commands.getoutput("atop | grep cpu")'
p91
sI272
S'    return server'
p92
sI273
S''
sI274
S''
sI275
S'### Fun\xc3\xa7\xc3\xa3o para mostrar hora real time ###'
p93
sI276
S'def atualiza_hora():'
p94
sI277
S'    from datetime import datetime'
p95
sI278
S"    item = str(datetime.now().strftime('%H:%M:%S - %d/%m/%Y'))"
p96
sI279
S''
sI280
S'    return item'
p97
ssg83
S'()'
p98
sg85
S'<module>'
p99
sa(dp100
g62
S'/var/www/web2py/gluon/globals.py'
p101
sg64
(dp102
S'self'
p103
S'undefined'
p104
sS'f'
S'<function dash>'
p105
ssg70
I417
sg71
(dp106
I416
S'        self._vars = None'
p107
sI417
S'        self._caller = lambda f: f()'
p108
sI418
S'        self._view_environment = None'
p109
sI419
S'        self._custom_commit = None'
p110
sI420
S'        self._custom_rollback = None'
p111
sI421
S"        self.generic_patterns = ['*']"
p112
sI412
S"        self.flash = ''            # used by the default view layout"
p113
sI413
S'        self.meta = Storage()      # used by web2py_ajax.html'
p114
sI414
S'        self.menu = []             # used by the default view layout'
p115
sI415
S'        self.files = []            # used by web2py_ajax.html'
p116
ssg83
S'(f=<function dash>)'
p117
sg85
S'<lambda>'
p118
sa(dp119
g62
S'/var/www/web2py/applications/tcc/controllers/control.py'
p120
sg64
(dp121
S'global db'
p122
S'<DAL uri="sqlite://Scans.db">'
p123
sS'db.Scan'
p124
S'<Table Scan (id, gatewayIp, interface, idTipoStatusScan, dataInicioScan)>'
p125
sS').select'
p126
g104
sS'idScan'
p127
g104
ssg70
I26
sg71
(dp128
I21
S"    saida_ip_externo = commands.getoutput('sudo curl ifconfig.pro')"
p129
sI22
S'    ip_externo = saida_ip_externo.split("\\n")'
p130
sI23
S''
sI24
S"    ips = check_output(['hostname', '--all-ip-addresses'])"
p131
sI25
S''
sI26
S'    idScan = db(db.Scan).select()[-1].id'
p132
sI27
S'    gatewayIp = db(db.Scan).select()[-1].gatewayIp'
p133
sI28
S''
sI29
S'    windows_disp = db((db.ScanDispositivo.nomeOs == "Windows") & (db.ScanDispositivo.idScan == idScan)).select().as_list()'
p134
sI30
S'    count_windows = len(windows_disp)'
p135
ssg83
S'()'
p136
sg85
S'dash'
p137
sa(dp138
g62
S'/var/www/web2py/gluon/packages/dal/pydal/objects.py'
p139
sg64
(dp140
S'self.query'
p141
S'<Query (Scan.id IS NOT NULL)>'
p142
sS'adapter.select'
p143
S'<bound method SQLiteAdapter.select of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p144
sS'fields'
p145
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p146
sS'adapter'
p147
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p148
sS'attributes'
p149
g45
sS'self'
p150
S'<Set (Scan.id IS NOT NULL)>'
p151
ssg70
I2020
sg71
(dp152
I2016
S"                                    attributes.get('left', None),"
p153
sI2017
S"                                    attributes.get('orderby', None),"
p154
sI2018
S"                                    attributes.get('groupby', None))"
p155
sI2019
S'        fields = adapter.expand_all(fields, tablenames)'
p156
sI2020
S'        return adapter.select(self.query, fields, attributes)'
p157
sI2021
S''
sI2022
S'    def iterselect(self, *fields, **attributes):'
p158
sI2023
S'        adapter = self.db._adapter'
p159
sI2024
S'        tablenames = adapter.tables(self.query,'
p160
sI2015
S"                                    attributes.get('join', None),"
p161
ssg83
S'(self=<Set (Scan.id IS NOT NULL)>, *fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], **attributes={})'
p162
sg85
S'select'
p163
sa(dp164
g62
S'/var/www/web2py/gluon/packages/dal/pydal/adapters/sqlite.py'
p165
sg64
(dp166
S'fields'
p167
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p168
sS'self'
p169
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p170
sS').select'
p171
S'<bound method SQLiteAdapter.select of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p172
sS'attributes'
p173
g45
sS'global SQLiteAdapter'
p174
S"<class 'pydal.adapters.sqlite.SQLiteAdapter'>"
p175
sS'query'
p176
S'<Query (Scan.id IS NOT NULL)>'
p177
sS'builtinsuper'
p178
S"<type 'super'>"
p179
ssg70
I123
sg71
(dp180
I118
S'        Note that the entire database, rather than one record, is locked'
p181
sI119
S'        (it will be locked eventually anyway by the following UPDATE).'
p182
sI120
S'        """'
p183
sI121
S"        if attributes.get('for_update', False) and not 'cache' in attributes:"
p184
sI122
S"            self.execute('BEGIN IMMEDIATE TRANSACTION;')"
p185
sI123
S'        return super(SQLiteAdapter, self).select(query, fields, attributes)'
p186
sI124
S''
sI125
S''
sI126
S'SPATIALLIBS = {'
p187
sI127
S"    'Windows':'mod_spatialite.dll',"
p188
ssg83
S'(self=<pydal.adapters.sqlite.SQLiteAdapter object>, query=<Query (Scan.id IS NOT NULL)>, fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={})'
p189
sg85
g163
sa(dp190
g62
S'/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py'
p191
sg64
(dp192
S'fields'
p193
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p194
sS'self'
p195
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p196
sS'attributes'
p197
g45
sS'self._select_aux'
p198
S'<bound method SQLiteAdapter._select_aux of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p199
sS'sql'
p200
S"'SELECT  Scan.id, Scan.gatewayIp, Scan.interface,...InicioScan FROM Scan WHERE (Scan.id IS NOT NULL);'"
p201
ssg70
I1296
sg71
(dp202
I1291
S'            return cache_model('
p203
sI1292
S'                key,'
p204
sI1293
S'                lambda self=self,args=args:self._select_aux(*args),'
p205
sI1294
S'                time_expire)'
p206
sI1295
S'        else:'
p207
sI1296
S'            return self._select_aux(sql,fields,attributes)'
p208
sI1297
S''
sI1298
S'    def iterselect(self, query, fields, attributes):'
p209
sI1299
S'        sql = self._select(query, fields, attributes)'
p210
sI1300
S"        cacheable = attributes.get('cacheable', False)"
p211
ssg83
S'(self=<pydal.adapters.sqlite.SQLiteAdapter object>, query=<Query (Scan.id IS NOT NULL)>, fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={})'
p212
sg85
g163
sa(dp213
g62
S'/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py'
p214
sg64
(dp215
S'rows'
p216
S"[(1, u'172.16.0.1', u'eth0', 2, u'2017-08-16 03:14:18.017805'), (10, u'172.16.0.1', u'eth0', 2, u'2017-08-29 07:47:04.395465'), (12, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:09:04.701973'), (13, u'192.168.1.1', u'wlan0', 2, u'2017-08-30 20:10:04.750897'), (14, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:11:03.275683'), (15, u'192.168.1.1', u'wlan0', 2, u'2017-08-30 20:12:34.068872'), (16, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:18:15.587885'), (17, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:26:16.742227'), (18, u'192.168.1.1', u'wlan0', 2, u'2017-08-30 20:47:48.136224'), (19, u'172.16.0.1', u'eth0', 1, u'31-08-2017 05:27:28')]"
p217
sS'fields'
p218
S'[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>]'
p219
sS'self'
p220
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p221
sS'cacheable'
p222
S'False'
p223
sS'self._colnames'
p224
S"['Scan.id', 'Scan.gatewayIp', 'Scan.interface', 'Scan.idTipoStatusScan', 'Scan.dataInicioScan']"
p225
sS'processor'
p226
S'<bound method SQLiteAdapter.parse of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p227
ssg70
I1277
sg71
(dp228
I1280
S'        """'
p229
sI1281
S'        Always returns a Rows object, possibly empty.'
p230
sI1272
S'            rows = list(rows)'
p231
sI1273
S"        limitby = args_get('limitby', None) or (0,)"
p232
sI1274
S'        rows = self.rowslice(rows,limitby[0],None)'
p233
sI1275
S"        processor = args_get('processor', self.parse)"
p234
sI1276
S"        cacheable = args_get('cacheable',False)"
p235
sI1277
S'        return processor(rows,fields,self._colnames,cacheable=cacheable)'
p236
sI1278
S''
sI1279
S'    def select(self, query, fields, attributes):'
p237
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, sql='SELECT  Scan.id, Scan.gatewayIp, Scan.interface,...InicioScan FROM Scan WHERE (Scan.id IS NOT NULL);', fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], attributes={})"
p238
sg85
S'_select_aux'
p239
sa(dp240
g62
S'/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py'
p241
sg64
(dp242
S'rows'
p243
S"[(1, u'172.16.0.1', u'eth0', 2, u'2017-08-16 03:14:18.017805'), (10, u'172.16.0.1', u'eth0', 2, u'2017-08-29 07:47:04.395465'), (12, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:09:04.701973'), (13, u'192.168.1.1', u'wlan0', 2, u'2017-08-30 20:10:04.750897'), (14, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:11:03.275683'), (15, u'192.168.1.1', u'wlan0', 2, u'2017-08-30 20:12:34.068872'), (16, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:18:15.587885'), (17, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:26:16.742227'), (18, u'192.168.1.1', u'wlan0', 2, u'2017-08-30 20:47:48.136224'), (19, u'172.16.0.1', u'eth0', 1, u'31-08-2017 05:27:28')]"
p244
sS'row'
p245
S"(19, u'172.16.0.1', u'eth0', 1, u'31-08-2017 05:27:28')"
p246
ssg70
I1767
sg71
(dp247
I1762
S''
sI1763
S'    def parse(self, rows, fields, colnames, blob_decode=True, cacheable=False):'
p248
sI1764
S'        (fields_virtual, fields_lazy, tmps) = self._parse_expand_colnames(colnames)'
p249
sI1765
S'        new_rows = [self._parse(row, tmps, fields, colnames, blob_decode,'
p250
sI1766
S'                                cacheable, fields_virtual, fields_lazy)'
p251
sI1767
S'                    for row in rows]'
p252
sI1768
S''
sI1769
S'        rowsobj = Rows(self.db, new_rows, colnames, rawrows=rows)'
p253
sI1770
S''
sI1771
S'        # Old stype virtual fields'
p254
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, rows=[(1, u'172.16.0.1', u'eth0', 2, u'2017-08-16 03:14:18.017805'), (10, u'172.16.0.1', u'eth0', 2, u'2017-08-29 07:47:04.395465'), (12, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:09:04.701973'), (13, u'192.168.1.1', u'wlan0', 2, u'2017-08-30 20:10:04.750897'), (14, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:11:03.275683'), (15, u'192.168.1.1', u'wlan0', 2, u'2017-08-30 20:12:34.068872'), (16, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:18:15.587885'), (17, u'192.168.1.1', u'wlan0', 1, u'2017-08-30 20:26:16.742227'), (18, u'192.168.1.1', u'wlan0', 2, u'2017-08-30 20:47:48.136224'), (19, u'172.16.0.1', u'eth0', 1, u'31-08-2017 05:27:28')], fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], colnames=['Scan.id', 'Scan.gatewayIp', 'Scan.interface', 'Scan.idTipoStatusScan', 'Scan.dataInicioScan'], blob_decode=True, cacheable=False)"
p255
sg85
S'parse'
p256
sa(dp257
g62
S'/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py'
p258
sg64
(dp259
S'blob_decode'
p260
S'True'
p261
sS'self'
p262
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p263
sS'ft'
p264
S"'datetime'"
p265
sS'value'
p266
S"u'31-08-2017 05:27:28'"
p267
sS'self.parse_value'
p268
S'<bound method SQLiteAdapter.parse_value of <pydal.adapters.sqlite.SQLiteAdapter object>>'
p269
ssg70
I1677
sg71
(dp270
I1672
S'                (tablename, fieldname, table, field, ft) = tmp'
p271
sI1673
S'                colset = new_row.get(tablename, None)'
p272
sI1674
S'                if colset is None:'
p273
sI1675
S'                    colset = new_row[tablename] = self.db.Row()'
p274
sI1676
S''
sI1677
S'                value = self.parse_value(value, ft, blob_decode)'
p275
sI1678
S'                if field.filter_out:'
p276
sI1679
S'                    value = field.filter_out(value)'
p277
sI1680
S'                colset[fieldname] = value'
p278
sI1681
S''
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, row=(19, u'172.16.0.1', u'eth0', 1, u'31-08-2017 05:27:28'), tmps=[('Scan', 'id', <Table Scan (id, gatewayIp, interface, idTipoStatusScan, dataInicioScan)>, <pydal.objects.Field object>, 'id'), ('Scan', 'gatewayIp', <Table Scan (id, gatewayIp, interface, idTipoStatusScan, dataInicioScan)>, <pydal.objects.Field object>, 'string'), ('Scan', 'interface', <Table Scan (id, gatewayIp, interface, idTipoStatusScan, dataInicioScan)>, <pydal.objects.Field object>, 'string'), ('Scan', 'idTipoStatusScan', <Table Scan (id, gatewayIp, interface, idTipoStatusScan, dataInicioScan)>, <pydal.objects.Field object>, 'integer'), ('Scan', 'dataInicioScan', <Table Scan (id, gatewayIp, interface, idTipoStatusScan, dataInicioScan)>, <pydal.objects.Field object>, 'datetime')], fields=[<pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>, <pydal.objects.Field object>], colnames=['Scan.id', 'Scan.gatewayIp', 'Scan.interface', 'Scan.idTipoStatusScan', 'Scan.dataInicioScan'], blob_decode=True, cacheable=False, fields_virtual={'Scan': []}, fields_lazy={'Scan': []})"
p279
sg85
S'_parse'
p280
sa(dp281
g62
S'/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py'
p282
sg64
(dp283
S'field_type'
p284
S"'datetime'"
p285
sS'self'
p286
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p287
sS'self.parsemap'
p288
S"{'bigint': <bound method SQLiteAdapter.parse_integer of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'blob': <bound method SQLiteAdapter.parse_blob of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'boolean': <bound method SQLiteAdapter.parse_boolean of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'date': <bound method SQLiteAdapter.parse_date of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'datetime': <bound method SQLiteAdapter.parse_datetime of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'decimal': <bound method SQLiteAdapter.parse_decimal of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'double': <bound method SQLiteAdapter.parse_double of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'float': <bound method SQLiteAdapter.parse_double of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'id': <bound method SQLiteAdapter.parse_id of <pydal.adapters.sqlite.SQLiteAdapter object>>, 'integer': <bound method SQLiteAdapter.parse_integer of <pydal.adapters.sqlite.SQLiteAdapter object>>, ...}"
p289
sS'value'
p290
S"'31-08-2017 05:27:28'"
p291
sS'key'
p292
S"'datetime'"
p293
ssg70
I1527
sg71
(dp294
I1522
S'            return value'
p295
sI1523
S"        elif field_type == 'blob' and not blob_decode:"
p296
sI1524
S'            return value'
p297
sI1525
S'        else:'
p298
sI1526
S'            key = REGEX_TYPE.match(field_type).group(0)'
p299
sI1527
S'            return self.parsemap[key](value,field_type)'
p300
sI1528
S''
sI1529
S'    def parse_reference(self, value, field_type):'
p301
sI1530
S'        referee = field_type[10:].strip()'
p302
sI1531
S"        if not '.' in referee:"
p303
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, value='31-08-2017 05:27:28', field_type='datetime', blob_decode=True)"
p304
sg85
S'parse_value'
p305
sa(dp306
g62
S'/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py'
p307
sg64
(dp308
S'd'
S'2017'
p309
sS'h'
S'5'
sS'm'
S'8'
sS'value'
p310
S"'31-08-2017 05:27:28'"
p311
sS'global datetime'
p312
S"<module 'datetime' (built-in)>"
p313
sS's'
S'28'
p314
sS'datetime.datetime'
p315
S"<type 'datetime.datetime'>"
p316
sS'ms'
p317
S'0'
sS'y'
S'31'
p318
sS'mi'
p319
S'27'
p320
ssg70
I1585
sg71
(dp321
I1580
S'            (h, mi, s) = time_items'
p322
sI1581
S"            if ms and ms[0] == '.':"
p323
sI1582
S"                ms = int(float('0' + ms) * 1000000)"
p324
sI1583
S'            else:'
p325
sI1584
S'                ms = 0'
p326
sI1585
S'            value = datetime.datetime(y, m, d, h, mi, s, ms)'
p327
sI1586
S'            if dt:'
p328
sI1587
S'                value = value + dt'
p329
sI1588
S'        return value'
p330
sI1589
S''
ssg83
S"(self=<pydal.adapters.sqlite.SQLiteAdapter object>, value='31-08-2017 05:27:28', field_type='datetime')"
p331
sg85
S'parse_datetime'
p332
sasS'pyver'
p333
S'Python 2.7.13: /usr/bin/python (prefix: /usr)'
p334
sS'session'
p335
g57
(S's\x1a\x00\x00\x00<div><table></table></div>'
tRp336
sS'etype'
p337
S"<type 'exceptions.ValueError'>"
p338
sS'date'
p339
S'Thu Aug 31 05:28:29 2017'
p340
sS'response'
p341
g57
(S's\x0f\x16\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top;">body</td><td style="vertical-align:top;">:</td><td><div>&lt;cStringIO.StringO object at 0x7fad936f8260&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">cookies</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">session_id_tcc</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-e5aa443c-e0a4-4af2-845a-0031da3c09b4<table><tr><td style="font-weight:bold;vertical-align:top;">comment</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">domain</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">expires</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">httponly</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">max-age</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">path</td><td style="vertical-align:top;">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">secure</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">version</td><td style="vertical-align:top;">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">delimiters</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">files</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">flash</td><td style="vertical-align:top;">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">form_label_separator</td><td style="vertical-align:top;">:</td><td><div>: </div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">formstyle</td><td style="vertical-align:top;">:</td><td><div>table3cols</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">generic_patterns</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">headers</td><td style="vertical-align:top;">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top;">X-Powered-By</td><td style="vertical-align:top;">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">menu</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">meta</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">models_to_run</td><td style="vertical-align:top;">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^control/\\w+\\.py$</div></td></tr><tr><td><div>^control/dash/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">postprocessing</td><td style="vertical-align:top;">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_client</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_compression_level</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_cookie_expires</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_data_name</td><td style="vertical-align:top;">:</td><td><div>session_data_tcc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_file</td><td style="vertical-align:top;">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_filename</td><td style="vertical-align:top;">:</td><td><div>/var/www/web2py/applications/tcc/sessions/127.0.0.1-e5aa443c-e0a4-4af2-845a-0031da3c09b4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_hash</td><td style="vertical-align:top;">:</td><td><div>c0762cbf4baf7f9af97c051e7fcb8083</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id</td><td style="vertical-align:top;">:</td><td><div>127.0.0.1-e5aa443c-e0a4-4af2-845a-0031da3c09b4</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_id_name</td><td style="vertical-align:top;">:</td><td><div>session_id_tcc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_masterapp</td><td style="vertical-align:top;">:</td><td><div>tcc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_new</td><td style="vertical-align:top;">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">session_storage_type</td><td style="vertical-align:top;">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">status</td><td style="vertical-align:top;">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top;">view</td><td style="vertical-align:top;">:</td><td><div>control/dash.html</div></td></tr></table></div>'
tRp342
sS'locals'
p343
(dp344
S'time_items'
p345
S'[5, 27, 28]'
p346
sS'field_type'
p347
S"'datetime'"
p348
sS'd'
S'2017'
p349
sS'time_part'
p350
S"'05:27:28'"
p351
sS'mi'
p352
S'27'
p353
sS'self'
p354
S'<pydal.adapters.sqlite.SQLiteAdapter object>'
p355
sS'm'
S'8'
sS'value'
p356
S"'31-08-2017 05:27:28'"
p357
sS'date_part'
p358
S"'31-08-2017'"
p359
sS's'
S'28'
p360
sS'ms'
p361
S'0'
sS'h'
S'5'
sS'y'
S'31'
p362
sS'timezone'
p363
S"''"
p364
sS'time_parts'
p365
S"['05', '27', '28']"
p366
sS'dt'
p367
S'None'
p368
sssS'traceback'
p369
S'Traceback (most recent call last):\n  File "/var/www/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/var/www/web2py/applications/tcc/controllers/control.py", line 282, in <module>\n  File "/var/www/web2py/gluon/globals.py", line 417, in <lambda>\n    self._caller = lambda f: f()\n  File "/var/www/web2py/applications/tcc/controllers/control.py", line 26, in dash\n    idScan = db(db.Scan).select()[-1].id\n  File "/var/www/web2py/gluon/packages/dal/pydal/objects.py", line 2020, in select\n    return adapter.select(self.query, fields, attributes)\n  File "/var/www/web2py/gluon/packages/dal/pydal/adapters/sqlite.py", line 123, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1296, in select\n    return self._select_aux(sql,fields,attributes)\n  File "/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1277, in _select_aux\n    return processor(rows,fields,self._colnames,cacheable=cacheable)\n  File "/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1767, in parse\n    for row in rows]\n  File "/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1677, in _parse\n    value = self.parse_value(value, ft, blob_decode)\n  File "/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1527, in parse_value\n    return self.parsemap[key](value,field_type)\n  File "/var/www/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1585, in parse_datetime\n    value = datetime.datetime(y, m, d, h, mi, s, ms)\nValueError: day is out of range for month\n'
p370
s.